{"chunk":0,"numChunks":2,"fileHash":"9DK5tx5s6YQ4DuFG8qNS+Tbvxg27KJRJpOSdSM9CPGk=","filePath":"FlaskWebProject/WebApp/models.py","content":"from datetime import datetime\nfrom . import db\nfrom sqlalchemy.orm import validates\nfrom enum import Enum\nclass UserRole(Enum):\n    GUEST = 'GUEST'\n    RECEPTIONIST = 'RECEPTIONIST'\n    ADMIN = 'ADMIN'\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(20), unique=True, nullable=False)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(60), nullable=False)\n    phone = db.Column(db.String(20))\n    address = db.Column(db.String(200))\n    role = db.Column(db.Enum(UserRole), default=UserRole.GUEST, nullable=False)\n    bookings = db.relationship('Booking', backref='guest', lazy='dynamic')\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\n    last_login = db.Column(db.DateTime)\n\n    def __repr__(self):\n        return f\"User('{self.username}', '{self.email}')\"\nclass Room(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    room_number = db.Column(db.Integer, nullable=False)\n    room_type = db.Column(db.String(50), nullable=False)\n    capacity = db.Column(db.Integer, nullable=False)\n    price_per_night = db.Column(db.Float, nullable=False)\n    description = db.Column(db.Text)\n    amenities = db.Column(db.JSON)\n    status = db.Column(db.String(20), default='available')\n    floor = db.Column(db.Integer)\n    is_active = db.Column(db.Boolean, default=True)\n    bookings = db.relationship('Booking', backref='room', lazy='dynamic')\n    maintenance_records = db.relationship('Maintenance', backref='room', lazy='dynamic')\n\n    def __repr__(self):\n        return f\"Room('{self.room_number}', '{self.capacity}')\""}