{"chunk":1,"numChunks":2,"fileHash":"9DK5tx5s6YQ4DuFG8qNS+Tbvxg27KJRJpOSdSM9CPGk=","filePath":"FlaskWebProject/WebApp/models.py","content":"from datetime import datetime\nclass Booking(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    start_date = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)\n    end_date = db.Column(db.DateTime, nullable=False)\n    status = db.Column(db.String(20), default='pending')\n    total_price = db.Column(db.Float, nullable=False)\n    check_in_time = db.Column(db.DateTime)\n    check_out_time = db.Column(db.DateTime)\n    special_requests = db.Column(db.Text)\n    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n    room_id = db.Column(db.Integer, db.ForeignKey('room.id'), nullable=False)\n    extra_services = db.relationship('ExtraService', backref='booking', lazy='dynamic')\n\n    @validates('start_date', 'end_date')\n    def validate_dates(self, key, date):\n        if key == 'start_date':\n            if date > self.end_date:\n                raise ValueError('Start date must be before end date')\n        if key == 'end_date':\n            if date < self.start_date:\n                raise ValueError('End date must be after start date')\n        return date\n\n    def __repr__(self):\n        return f\"Booking('{self.start_date}', '{self.end_date}', '{self.guest.username}', '{self.room.room_number}')\"\nclass ExtraService(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(100), nullable=False)\n    description = db.Column(db.Text)\n    price = db.Column(db.Float, nullable=False)\n    booking_id = db.Column(db.Integer, db.ForeignKey('booking.id'), nullable=False)\n    service_date = db.Column(db.DateTime, default=datetime.utcnow)\n    status = db.Column(db.String(20), default='pending')\n\n    def __repr__(self):\n        return f\"ExtraService('{self.name}', '{self.price}')\""}